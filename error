Skip to content
This repository
Search
Pull requests
Issues
Marketplace
Explore
 @wd1
 Sign out
 Watch 215
  Star 1,653  Fork 943 myexchangepea/myexchangepea
 Code  Issues 176  Pull requests 9  Projects 0  Wiki  Insights
Branch: master Find file Copy pathmyexchangepea/doc/setup-local-osx.md
5c422c9  on Apr 5, 2015
@lgn21st lgn21st Update doc
1 contributor
RawBlameHistory     
169 lines (104 sloc)  4.3 KB
Setup local development environment on OS X

Overview

Install Homebrew
Install Ruby
Install MySQL
Install Redis
Install RabbitMQ
Install Bitcoind
Install PhantomJS
Install ImageMagick
Configure Myexchangepea
1. Install Homebrew

ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
2. Install Ruby

brew install rbenv ruby-build
Add rbenv to bash so that it loads every time you open a terminal

echo 'if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi' >> ~/.bash_profile
source ~/.bash_profile
Install Ruby and set it as the default version

rbenv install 2.2.1
rbenv global 2.2.1

ruby -v
Install bundler

echo "gem: --no-ri --no-rdoc" > ~/.gemrc
gem install bundler
rbenv rehash
3. Install MySQL

brew install mysql
and then start it with

mysql.server start
4. Install Redis

brew install redis
and then start it with

redis-server /usr/local/etc/redis.conf
5. Install RabbitMQ

brew install rabbitmq
and then start it with
export PATH=/usr/local/sbin:$PATH
rabbitmq-server
6. Install Bitcoind

Download and Install Bitcoin Core

mkdir -p ~/Library/Application\ Support/Bitcoin
touch ~/Library/Application\ Support/Bitcoin/bitcoin.conf
vim ~/Library/Application\ Support/Bitcoin/bitcoin.conf
Insert the following lines into the bitcoin.conf, and replce with your username and password.

server=1
daemon=1

# If run on the test network instead of the real bitcoin network
testnet=1

# You must set rpcuser and rpcpassword to secure the JSON-RPC api
# Please make rpcpassword to something secure, `5gKAgrJv8CQr2CGUhjVbBFLSj29HnE6YGXvfykHJzS3k` for example.
# Listen for JSON-RPC connections on <port> (default: 8332 or testnet: 18332)
rpcuser=INVENT_A_UNIQUE_USERNAME
rpcpassword=INVENT_A_UNIQUE_PASSWORD
rpcport=18332

# Notify when receiving coins
walletnotify=/usr/local/sbin/rabbitmqadmin publish routing_key=myexchangepea.deposit.coin payload='{"txid":"%s", "channel_key":"satoshi"}'
and then start Bitcoind with

open /Applications/Bitcoin-Qt.app


///Onproduction server original passenger_ruby-> passenger_ruby /usr/bin/passenger_free_ruby;
7. Install PhantomJS

Myexchangepea uses Capybara with PhantomJS to do the feature tests, so if you want to run the tests. Install the PhantomJS is neccessary.

brew install phantomjs
8. Configure Myexchangepea

brew install imagemagick
9. Configure Myexchangepea

Clone the project

git clone git://github.com/myexchangepea/myexchangepea.git
cd myexchangepea

gem file gon = 5.2.0

bundle install
Prepare configure files

bin/init_config
Setup Pusher

Myexchangepea depends on Pusher. A development key/secret pair for development/test is provided in config/application.yml (uncomment to use). PLEASE USE IT IN DEVELOPMENT/TEST ENVIRONMENT ONLY!
More details to visit pusher official website

# uncomment Pusher related settings
vim config/application.yml
Setup bitcoind rpc endpoint

# replace username:password and port with the one you set in
# username and password should only contain letters and numbers, do not use email as username
# bitcoin.conf in previous step
vim config/currencies.yml
Config database settings

vim config/database.yml

# Initialize the database and load the seed data
////////////////////////////
rake acts_as_taggable_on_engine:install:migrations
bundle exec rake db:setup
Run Daemons

# start all daemons
bundle exec rake daemons:start

# or start daemon one by one
bundle exec rake daemon:matching:start
...

# Daemon trade_executor can be run concurrently, e.g. below
# line will start four trade executors, each with its own logfile.
# Default to 1.
TRADE_EXECUTOR=4 rake daemon:trade_executor:start

# You can do the same when you start all daemons:
TRADE_EXECUTOR=4 rake daemons:start
When daemons don't work, check log/#{daemon name}.rb.output or log/myexchangepea:amqp:#{daemon name}.output for more information (suffix is '.output', not '.log').

Run Myexchangepea

# start server
bundle exec rails server
Visit http://localhost:3000

user: admin@myexchangepea.dev
pass: Pass@word8
Â© 2017 GitHub, Inc.
Terms
Privacy
Security
Status
Help
Contact GitHub
API
Training
Shop
Blog
About


/////gemfile
source 'https://rubygems.org'

gem 'rails', '~> 4.0.12'
gem 'rails-i18n'

gem 'mysql2', '~> 0.3.10'
gem 'daemons-rails'
gem 'redis-rails'

gem 'rotp'
gem 'json'
gem 'jbuilder'
gem 'bcrypt-ruby', '~> 3.1.2'

gem 'doorkeeper', '~> 1.4.1'
gem 'omniauth', '~> 1.2.1'
gem 'omniauth-identity', '~> 1.1.1'
gem 'omniauth-weibo-oauth2', '~> 0.4.0'

gem 'figaro'
gem 'hashie'

gem 'aasm', '~> 3.4.0'
gem 'amqp', '~> 1.3.0'
gem 'bunny', '~> 1.2.1'
gem 'cancancan'
gem 'enumerize', '1.1.1'
gem 'datagrid'
gem 'acts-as-taggable-on'
gem 'kaminari'
gem 'paranoid2'
gem 'active_hash'
gem 'http_accept_language'
gem "globalize", "~> 4.0.0"
gem 'paper_trail', '~> 3.0.1'
gem 'rails-observers'
gem 'country_select', '~> 2.1.0'

gem 'gon', '5.2.0'
gem 'pusher'
gem 'eventmachine', '~> 1.0.4'
gem 'em-websocket', '~> 0.5.1'

gem 'simple_form', '~> 3.1.0'
gem 'slim-rails'
gem 'sass-rails'
gem 'coffee-rails'
gem 'uglifier'
gem "jquery-rails"
gem "angularjs-rails"
gem 'bootstrap-sass', '~> 3.2.0.2'
gem 'bootstrap-wysihtml5-rails'
gem 'anjlab-bootstrap-rails', :require => 'bootstrap-rails',
:github => 'anjlab/bootstrap-rails'
gem 'font-awesome-sass'
gem 'bourbon'
gem 'momentjs-rails'
gem 'eco'
gem 'browser', '~> 0.8.0'
gem 'rbtree'
gem 'liability-proof', '0.0.9'
gem 'whenever', '~> 0.9.2'
gem 'grape', '~> 0.7.0'
gem 'grape-entity', '~> 0.4.2'
gem 'grape-swagger', '~> 0.7.2'
gem 'rack-attack', '~> 3.0.0'
gem 'easy_table'
gem 'phonelib', '~> 0.3.5'
gem 'twilio-ruby', '~> 3.11'
gem 'excon'
gem 'unread', github: 'wd1/unread'
gem 'carrierwave', '~> 0.10.0'
gem 'simple_captcha2', require: 'simple_captcha'
gem 'rest-client', '~> 1.6.8'

group :development, :test do
  gem 'factory_girl_rails'
  gem 'faker', '~> 1.4.3'
  gem 'mina'
  gem 'mina-slack', github: 'wd1/mina-slack'
  gem 'meta_request'
  gem 'better_errors'
  gem 'binding_of_caller'
  gem 'pry-rails'
  gem 'quiet_assets'
  gem 'mails_viewer'
  gem 'timecop'
  gem 'dotenv-rails'
  gem 'rspec-rails'
  gem 'byebug'
end

group :test do
  gem 'database_cleaner'
  gem 'mocha', :require => false
  gem 'shoulda-matchers'
  gem 'capybara'
  gem 'launchy'
  gem 'selenium-webdriver'
  gem 'poltergeist'

  # rspec-rails rely on test-unit if rails version less then 4.1.0
  # but test-unit has been removed from ruby core since 2.2.0
  gem 'test-unit'
end

/////////